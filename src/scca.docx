
---------------------------	2ReactExpressChat    ----------------------
import { useState } from 'react';		import './App.css';	import Login from './components/Login/Login';
import Messages from './components/Messages/Messages';
import GetLogin from './components/GetLogin/GetLogin';
import SendMessages from './components/SendMessage/SendMessages';
import Register from './components/Register/Register';
function App() {		 const [ loggedIn, setloggedIn ] = useState(false);
  const [ datosPadre, setDatosPadre ] = useState("");
function loginHandler() { 	  setloggedIn(true);	}
  return (	 <div>	   <h1>Aplicación de mensajeria</h1>	<GetLogin />	  	<Login />
  <Register parentSetter={setDatosPadre}/><br />		 <button onClick={loginHandler}>Register</button>
      {loggedIn && <Messages id={datosPadre.id} password={datosPadre.password} />}
      {loggedIn && <SendMessages id={datosPadre.id} password={datosPadre.password} />}
    </div>	 );	}	export default App;
-----------------------  LOGIN   --------------------------------
import { useEffect, useState, useRef } from 'react';
function Login({ results }) {	const [usuario, setUsuario] = useState("");
const [password, setPassword] = useState("");
const host = "https://web-develop-react-express-chat.herokuapp.com"
async function newUser(url, data) {	 const responses = await fetch(		 url + "/login/",	  {		 method: 'POST',	body: data,	 headers: {  	"Content-Type": "application/json",	 }	  }	 )      }
 function login() {	 let dataTaken = { userName: usuario, password: password };
 const data = JSON.stringify(dataTaken);	newUser(host, data);	 }
 function changeUsuario(event) {	setUsuario(event.target.value);	          }
 function changePassword(event) {	setPassword(event.target.value);	}
    return (  <>		 <h2>Login de usuario</h2>
 <input type="text" value={usuario} onChange={changeUsuario} /><br />
 <input type="text" value={password} onChange={changePassword} /><br />
 <button onClick={login}>Login</button>	</>	   );	}	export default Login;
-----------------------    MESSAGES   -----------------------------------
import { useEffect, useState, useRef } from 'react';
function Messages({ id, password }) {
//const [token, setToken] = useState("");
const [messages, setMessages] = useState("");		 const token = authToken(id, password);
const [timer, setTimer] = useState(null);           const host = "https://web-develop-react-express-chat.herokuapp.com"
function authToken(id, password) { // En autenticación Basic, usuario y contraseña se separan con ':'
 const authToken = `${id}:${password}`;		// Y se codifican en Base64
 const base64token = btoa(authToken);
 return `Basic ${base64token}`;		 }
    // useEffect que solo se ejecutará una vez porque metemos un array vacio
 useEffect(	() => {
//useInterval:primer parametro será una función que queramos que se ejecute en el tiempo que queramos
if ( timer ) clearInterval(timer);		const timerId = setInterval(()=>getMessages(token), 1000)	 setTimer(timerId)	},	[id, password]		 )
 async function authGet(url, token) {	 const response = await fetch(	url,    {
 headers: {	 Authorization: token	 }	 }	 );	const data = await response.json();       return data;   }
    function getMessages(token) {	 authGet(host + "/messages/", token).then(
  data => setMessages(data.map(	(item) => <li ><b>Id:</b> {item.source}- <b>Contenido:</b> {item.content}</li>	 ))	 )	 
  return (  <>	<h2>Obtener todos los mensajes</h2>		 <p>{token}</p>
  <button onClick={getMessages}>Obtener Mensajes</button>	 <p>{messages}</p> </>  );} export default Messages;
---------------------------   SENDMESSAGES ----------------------------------------------------
import { useEffect, useState, useRef } from 'react';
function SendMessages({ id, password }) {	const [message, setMessage] = useState("");
const host = "https://web-develop-react-express-chat.herokuapp.com"
async function authPost(url, token, data) {	 const response = await fetch(	 url,	 {  method: "POST",
   body: data,	headers: {	 "Content-Type": "application/json",	 Authorization: token
   }	 }	  );	 const responseData = await response.json();
        return responseData;	 }	 function authToken(id, password) {
 // En autenticación Basic, usuario y contraseña se separan con ':'	   const authToken = `${id}:${password}`;
// Y se codifican en Base64     const base64token = btoa(authToken);	 return `Basic ${base64token}`;	 }
    function send(ev) {	const token = authToken(id, password);
     let data = JSON.stringify({ content: message });
        authPost(host + "/message/", token, data);	 }
    function changeMessage(event) {	setMessage(event.target.value);   }
return (   <>	 <h2>Enviar mensaje</h2>
 <textarea type="text" value={message} onChange={changeMessage} /><br />
  <button onClick={send}>Enviar</button>	  </>	 );	}	export default SendMessages;
---------------------------








